import unittest
from datetimestring import DateTimeString

class Test_DateTimeString(unittest.TestCase):
    def setUp(self):
        pass

    def test_DateTimeString_dates(self):
        dts = DateTimeString('10  January  2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('10 Jan  2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('January 10, 2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('Jan 10, 2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('1.10.2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('1-10-2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('1/10/2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('1 10 2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('2017.1.10')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('2017-1-10')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('2017/1/10')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('2017 1 10')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('20170110')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('10  January  -2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, -2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('10 Jan  -2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, -2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('January 10, -2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, -2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('Jan 10, -2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, -2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('1.10.-2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, -2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('1-10--2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, -2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('1/10/-2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, -2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('1 10 -2017')
        dts.parse_datetime()
        self.assertEquals(dts.year, -2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('-2017.1.10')
        dts.parse_datetime()
        self.assertEquals(dts.year, -2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('-2017-1-10')
        dts.parse_datetime()
        self.assertEquals(dts.year, -2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('-2017/1/10')
        dts.parse_datetime()
        self.assertEquals(dts.year, -2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('-2017 1 10')
        dts.parse_datetime()
        self.assertEquals(dts.year, -2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

        dts = DateTimeString('-20170110')
        dts.parse_datetime()
        self.assertEquals(dts.year, -2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)

    def test_DateTimeString_datetimes(self):
        dts = DateTimeString('10  January  2017  22.75908333')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)
        self.assertEquals(dts.hours, 22)
        self.assertEquals(dts.minutes, 45)
        self.assertAlmostEquals(dts.seconds, 32.7, 4)

        dts = DateTimeString('10  January  2017  22:45:32.7')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)
        self.assertEquals(dts.hours, 22)
        self.assertEquals(dts.minutes, 45)
        self.assertAlmostEquals(dts.seconds, 32.7, 4)

        dts = DateTimeString('10  January  2017  12:00:00 am')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)
        self.assertEquals(dts.hours, 0)
        self.assertEquals(dts.minutes, 0)
        self.assertAlmostEquals(dts.seconds, 0, 4)

        dts = DateTimeString('10  January  2017  12:00:00 pm')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)
        self.assertEquals(dts.hours, 12)
        self.assertEquals(dts.minutes, 0)
        self.assertAlmostEquals(dts.seconds, 0, 4)

        dts = DateTimeString('10  January  2017  10:45:32.7 am')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)
        self.assertEquals(dts.hours, 10)
        self.assertEquals(dts.minutes, 45)
        self.assertAlmostEquals(dts.seconds, 32.7, 4)

        dts = DateTimeString('10  January  2017  10:45:32.7 pm')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)
        self.assertEquals(dts.hours, 22)
        self.assertEquals(dts.minutes, 45)
        self.assertAlmostEquals(dts.seconds, 32.7, 4)

        dts = DateTimeString('10  January  2017  10:45:32.7 a.m.')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)
        self.assertEquals(dts.hours, 10)
        self.assertEquals(dts.minutes, 45)
        self.assertAlmostEquals(dts.seconds, 32.7, 4)

        dts = DateTimeString('10  January  2017  10:45:32.7 p.m.')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)
        self.assertEquals(dts.hours, 22)
        self.assertEquals(dts.minutes, 45)
        self.assertAlmostEquals(dts.seconds, 32.7, 4)

        dts = DateTimeString('10  January  2017  10 a.m.')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)
        self.assertEquals(dts.hours, 10)
        self.assertEquals(dts.minutes, 0)
        self.assertAlmostEquals(dts.seconds, 0, 4)

        dts = DateTimeString('10  January  2017  10 p.m.')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 1)
        self.assertEquals(dts.day, 10)
        self.assertEquals(dts.hours, 22)
        self.assertEquals(dts.minutes, 0)
        self.assertAlmostEquals(dts.seconds, 0, 4)

        dts = DateTimeString('2009-06-15T13:45:30')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2009)
        self.assertEquals(dts.month, 6)
        self.assertEquals(dts.day, 15)
        self.assertEquals(dts.hours, 13)
        self.assertEquals(dts.minutes, 45)
        self.assertAlmostEquals(dts.seconds, 30, 4)

        dts = DateTimeString('20170323T180847')
        dts.parse_datetime()
        self.assertEquals(dts.year, 2017)
        self.assertEquals(dts.month, 3)
        self.assertEquals(dts.day, 23)
        self.assertEquals(dts.hours, 18)
        self.assertEquals(dts.minutes, 8)
        self.assertAlmostEquals(dts.seconds, 47, 4)

if __name__ == '__main__':
    unittest.main()
    